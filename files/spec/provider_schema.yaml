# Description: This schema lists all the supported data providers and their sample usage
# All data providers are enabled through "category" type constraint
# Any property applying a data provider must be a "text" type

name: "data_providers"
entities:
  - name: "data_providers"
    properties:
      ## Id Provider
      ## This provider generates random ID string with given format, if no format is provided, it generates UUID
      ##  - category name: id
      ##  - auxiliary constraints: format
      ## Usage:
      ## 1. Define ID Format
      ## Id format can be defined through "format" constraint as a string value.
      ## Two wildcards are supported: "?" and "#" where "?" represents a random letter and "#" represents a random digit
      ## Examples:
      ## - "ID-##########" - it generates ID starting with "ID-" and ending with 10 random digits
      ## - "2024.2.???" - it generates ID starting with "2024.2." and ending with 3 random letters
      - name: "id_sample"
        type: "text"
        constraints:
          - type: "category"
            name: "id"
          - type: "format"
            format: "ID-??########"
      ## Random Text String Provider
      ## This provider generates random text string
      ##  - category name: text
      ##  - locale supported: en-US
      ##  - auxiliary constraints: format, length, size
      ## Usage:
      ## 1. Word Count:
      ## The word count of generated text is defined through "size" constraint or "length" constraint
      ## The word count does not include any prefixes and suffixes provided
      ## If no count is provided, the provider generates a random word count between 5 and 20
      ## 1.1 Word Count
      ## Fixed word count is defined through "length" constraint
      ## Example of generate 5 words:
      ## constraints:
      ##   - type: "length"
      ##     max: 5
      ## 1.2 Format
      ## Extra format can be defined through "format" constraint
      ## It's important to have pipe (|) character at the beginning of the format string because format spec is passed as YAML string in a separate process
      ## In a format spec, you can define three extra properties:
      ##  - prefixes: list of prefixes to be added to the generated text
      ##  - suffixes: list of suffixes to be added to the generated text
      ##  - style: style of the generated text
      ##    - 1: all lower case, e.g. "hello world"
      ##    - 2: all upper case, e.g. "HELLO WORLD"
      ##    - 3: upper case for first character, lower case for others, e.g. "Hello world"
      ##    - 4: camel case for each word, e.g. "Hello World"
      - name: "random_text_sample"
        type: "text"
        constraints:
          - type: "category"
            name: "text"
          - type: "size"
            min: 5
            max: 10
          - type: "format"
            format: |
              prefixes:
                - "California"
                - "New York"
              suffixes:
                - "Hospital"
                - "Medical Center"
                - "Clinic"
              style: 4
      ## IP Address Provider
      ## This provider generates random IP4 address
      ##  - category name: ip
      ##  - auxiliary constraints: format
      ## Usage:
      ## 1. Define IP Address Masks
      ## Ip address masks can be defined through "format" constraint
      ## The format spec is passed as YAML string in a separate process, please make sure pipe (|) character is at the beginning of the format string
      ## The mask is defined as a list of strings, each string represents a mask. If more than 1 mask is defined, each mask is applied randomly
      ## A mask consists with number parts and the wildcard character (#) parts
      ## Examples:
      ##  - "172.0.###.###" - it generates IP addresses starting with 172.0
      ##  - "###.23.5.###" - it generates IP addresses with 23.5 in the middle
      ##  - "172.###.###.5" - it generates IP addresses starting with 172 and ending with 5
      - name: "ip_address_sample"
        type: "text"
        constraints:
          - type: "category"
            name: "ip"
          - type: "format"
            format: |
              - "172.0.###.###"
              - "172.1.###.###"